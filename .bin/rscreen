#!/bin/sh

# rscreen DESTINATION [SESSION]
#
# Copy config files to the directory $HOME/{SESSION} at the remote host given
# by DESTINATION. Then login and start a screen session on the remote host with
# the session directory set as $HOME.
#
# DESTINATION is an ssh target of the form # [user@]hostname
#
# SESSION is an optional argument. If not given, defaults to local username. 

set -x

DESTINATION="${1}"
SESSION="${2:-${USER}}"
LOCALTMP="$(mktemp --tmpdir --directory home.XXXXXXXX)"
REMOTEHOME="$(ssh ${DESTINATION} printenv HOME)/${USER}"

chmod 755 "${LOCALTMP}"

for f in bash_profile bashrc gitconfig hgrc inputrc profile screenrc vim vimrc; do
    ln -s "${HOME}/.${f}" "${LOCALTMP}/.${f}"
done

BIN="${LOCALTMP}/.bin"
mkdir "${BIN}"

LOCALMYSCREEN="${BIN}/my-screen"
cat << HERE > "${LOCALMYSCREEN}"
#!/bin/sh
export REAL_HOME="\${HOME}"
export HOME="${REMOTEHOME}"
screen -DR "${SESSION}"
if [ ! -e "\${HOME}/.ssh" ]; then
    ln -s "\${REAL_HOME}/.ssh" "\${HOME}"
fi
HERE
chmod +x "${LOCALMYSCREEN}"

rsync --archive --copy-links "${LOCALTMP}/" "${DESTINATION}:${REMOTEHOME}"
rm --recursive --force "${LOCALTMP}"

REMOTEMYSCREEN="${REMOTEHOME}/.bin/my-screen"
if mosh "${DESTINATION}" "${REMOTEMYSCREEN}"; then
    exit
else
    ssh -t "${DESTINATION}" "${REMOTEMYSCREEN}" 
fi
